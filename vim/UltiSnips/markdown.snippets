extends html

global !p

def heading(match):
    return "#" * int(match.group(1))

def emphasis_ending(opening):
    if any(char.isdigit() for char in opening):
        # Opening is still in choice tabstop mode
        return ""

    return opening

endglobal

snippet code "Code block" b
\`\`\`${1:txt}
${2:${VISUAL}}
\`\`\`
$0
endsnippet

snippet "code inline" "Inline Code" i
\`${1:${VISUAL}}\`$0
endsnippet

snippet comment "Markdown comment"
<!-- ${1:${VISUAL}} -->$0
endsnippet

snippet em "Markdown emphasis, strong, combination" w
${1|_,**,**_|}${2:${VISUAL}}`!p snip.rv = emphasis_ending(t[1])`$0
endsnippet

snippet footnote "Markdown Footnote"
[^${1:${VISUAL:Footnote}}]
[^$1]:${2:Text}$0
endsnippet

snippet "heading ([1-6])" "Markdown heading" r
`!p snip.rv = heading(match)` ${0:${VISUAL}}
endsnippet

snippet image "Reference image link"
[![${1:${VISUAL:text}}][${2:$1 image url}]][${3:$1 link url}]
[$2]: ${4:image url} ${5:"${6:$4}"}
[$3]: ${7:link url} ${8:"${9:$7}"}$0
endsnippet

snippet "image inline" "Inline image"
[![${1:${VISUAL:img alt text}}](${2:img href})](${3:href})$0
endsnippet

snippet link "Reference link"
[${1:${VISUAL:Text}}][${2:id}]
[`!p snip.rv = t[2] or t[1]`]: ${3:url} ${4:"${5:$3}"}$0
endsnippet

snippet "link inline" "Inline link"
[${1:${VISUAL:Text}}](${2:url})$0
endsnippet
