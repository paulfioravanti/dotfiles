extends html

global !p

import re
# ~/.vim/pythonx/elixir_helpers.py
from elixir_helpers import (
    closing_character,
    module_path_match,
    to_module_name
)

def eex_placeholder(tag):
    if tag == "%#":
        return "comment"
    if tag in ["%%", "%%="]:
        return "quotation"
    return "expression"

endglobal

snippet assign-value "Assign-value pair"
${1:assign}=${2:"}${3:value}`!p snip.rv = closing_character(t[2])`
endsnippet

snippet "\beex" "EEx tag" r
<${1|%,%=,%#,%%,%%=|} ${2:`!p snip.rv = eex_placeholder(t[1])`} %>$0
endsnippet

snippet "\bdata" "Phoenix.HTML data param" r
data: [${1:confirm}: ${2:"${3:Really?}"}]$0
endsnippet

snippet end "EEx <% end %> tag" b
<% end %>
endsnippet

snippet "img tag" "Phoenix.HTML.Tag.img_tag/2"
<%= img_tag "${1:src}"${2:, class: "${3:class}"${4:, }${5:srcset: %{"${6:$1}" => "${7:1x}", "${8:2x-$1}" => "${9:2x}"}}} %>
endsnippet

snippet label "Phoenix.HTML.Form.label/4"
<%= label ${1:form}, :${2:field}, "${3:text}"${4:, ${5:id: "${6:id}"}${7:, }${8:class: "${9:class}"}} %>
endsnippet

snippet link "Phoenix.HTML.link.link/2"
<%= link${1: "${2:text}",} to: "${3:/href}"${4:${5:, method: ${6|:get,:post,:put,:patch,:delete|}}${7:, class: "${8:class}"}${9:, data: [${10:confirm}: "${11:Really?}"]}} ${12:do %>
  $0
<% end %>}`!p snip.rv = "" if t[12] else "%>"`
endsnippet

snippet select "Phoenix.HTML.Form.select/4"
<%= select ${1:form}, :${2:field}, ${3:options}${4:, ${5:selected: ${6:selected}}${7:, }${8:prompt: ${9:[key: "${10:prompt_string}", disabled: ${11:true}]}}} %>
endsnippet

snippet submit "Phoenix.HTML.Form.submit/2"
<%= submit "${1:value}"${2:, ${3:class: "${4:class}"}${5:, }${6:phx_disable_with: "${7:Saving...}"}} %>
endsnippet

snippet "submit do" "Phoenix.HTML.Form.submit/1"
<%= submit do %>
  ${0:value}
<% end %>
endsnippet
