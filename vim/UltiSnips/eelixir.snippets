global !p

import re

_PHOENIX_TEMPLATE_FILEPATH = re.compile(
    "lib/(.+_web)/templates/(.+)/(.+)\.html\.heex"
)

def module_name(regex):
    module_parts = re.search(regex, path).group(1, 2, 3)
    top, sub, template = map(snake_to_pascal, module_parts)
    return f'{top}.{sub}.{template}'

def snake_to_pascal(string):
    return string.replace("_", " ").title().replace(" ", "")

endglobal

snippet eex "EEx inline with output"
<% $1 %>$0
endsnippet

snippet "eex comment" "EEx comment - discarded from source"
<%# $1 %>$0
endsnippet

snippet "eex exec" "EEx replace with result"
<%= $1 %>$0
endsnippet

snippet "eex quotation" "EEx returns the contents inside"
<%% $1 %>$0
endsnippet

snippet "eex quotation exec" "EEx returns the contents inside"
<%%= $1 %>$0
endsnippet

snippet form "LiveView form function component"
<.form
  let={${1:f}}
  for={${2:@changeset}}
  ${3:id="${4:form-id}"}
  ${4:phx-target={${5:@myself}}}
  ${6:phx-change="${7:validate}"}
  ${8:phx-submit="${9:save}"}>

  $0

  <div>
    <%= submit "${10:Save}", ${11:phx_disable_with: "${12:Saving...}"} %>
  </div>
</.form>
endsnippet

snippet "live component" "LiveView Phoenix.LiveComponent function component"
<.live_component
  module={${1:`!p snip.rv = module_name(_PHOENIX_TEMPLATE_FILEPATH)`}Live}
  id={${2:live-component-id}}
  $0
/>
endsnippet
