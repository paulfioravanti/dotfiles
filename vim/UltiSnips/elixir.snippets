global !p

import re

_MODULE_FILEPATH = re.compile("lib\/([^\/]+)\/(?:(?:[^\/]+)\/)*([^\/]+).ex")
_DASHES_AND_UNDERSCORES = re.compile("[-_]")

def module_name():
    module_parts = re.search(_MODULE_FILEPATH, path).group(1, 2)
    top, sub = map(to_module_name, module_parts)
    return f'{top}.{sub}'

def to_module_name(string):
    return re.sub(_DASHES_AND_UNDERSCORES, " ", string).title().replace(" ", "")

endglobal

snippet "def module" "Defines a module block"
defmodule ${1:`!p snip.rv = module_name()`} do
  $0
end
endsnippet

snippet "live route" "Defines a LiveView route"
live "/${1:path}", ${2:`!p snip.rv = to_module_name(t[1])`}Live${3:, :${4:action}${5:, ${6:opts}}}$0
endsnippet

snippet "validate length" "ecto validate_length"
validate_length(${1:${2:changeset}, }:${3:field}, ${4:is: ${5:length}${6:, }}${7:min: ${8:length}${9:, }}${10:max: ${11:length}${12:, }}${13:count: :${14:length_type}${15:, }}${16:message: "${17:message}"})$0
endsnippet
